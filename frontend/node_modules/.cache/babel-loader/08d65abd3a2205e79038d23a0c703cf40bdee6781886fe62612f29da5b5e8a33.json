{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./App.css';import GaugeChart from'react-gauge-chart';import logo from'./assets/logo.png';// Assuming you have a logo image in the src folder\nimport{Line}from'react-chartjs-2';import{Chart as ChartJS,LineElement,CategoryScale,LinearScale,PointElement,Tooltip,Legend}from'chart.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(LineElement,CategoryScale,LinearScale,PointElement,Tooltip,Legend);function App(){const[gateway,setGateway]=useState('');const[downloadSpeed,setDownloadSpeed]=useState(null);const[uploadSpeed,setUploadSpeed]=useState(null);const[ping,setPing]=useState(null);const[scanResults,setScanResults]=useState([]);const[isScanning,setIsScanning]=useState(false);const[showScanResults,setShowScanResults]=useState(true);const[hostCount,setHostCount]=useState(0);const[historyData,setHistoryData]=useState([]);useEffect(()=>{fetch('/speedtest/history').then(res=>res.json()).then(data=>{if(Array.isArray(data)){setHistoryData(data);}}).catch(err=>console.error('Failed to load history:',err));},[]);useEffect(()=>{fetch('/gateway').then(res=>res.json()).then(data=>setGateway(data.gateway_ip||'Unknown')).catch(()=>setGateway('Error'));},[]);useEffect(()=>{runSpeedtest();// initial run\nconst interval=setInterval(runSpeedtest,120000);// run every 2 minutes\nreturn()=>clearInterval(interval);// cleanup\n},[]);const runSpeedtest=async()=>{const res=await fetch('/speedtest');const data=await res.json();if(!data.error){setDownloadSpeed(data.download_mbps);setUploadSpeed(data.upload_mbps);setPing(data.ping_ms);}};const runScan=async()=>{setIsScanning(true);try{const res=await fetch('/scan');const data=await res.json();if(Array.isArray(data.results)){setScanResults(data.results);setHostCount(data.host_count);}else{console.error('Invalid scan results format:',data);setScanResults([]);}}catch(error){console.error('Scan failed:',error);setScanResults([]);}setIsScanning(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"NetWatchdog Logo\",className:\"logo\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"NetWatchdog\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Default Gateway: \",gateway]}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-group\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:runSpeedtest,children:\"Run Speedtest\"}),/*#__PURE__*/_jsx(\"button\",{onClick:runScan,children:\"Scan Network\"})]})]}),/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"gauges\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"gauge-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Download\"}),/*#__PURE__*/_jsx(GaugeChart,{id:\"download-gauge\",nrOfLevels:30,percent:(downloadSpeed||0)/1000,text:`${downloadSpeed!==null&&downloadSpeed!==void 0?downloadSpeed:'--'} Mbps`,animate:true,needleColor:\"#fff\",colors:['#00ff99','#0099ff']})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"gauge-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Upload\"}),/*#__PURE__*/_jsx(GaugeChart,{id:\"upload-gauge\",nrOfLevels:30,percent:(uploadSpeed||0)/100,text:`${uploadSpeed!==null&&uploadSpeed!==void 0?uploadSpeed:'--'} Mbps`,animate:true,needleColor:\"#fff\",colors:['#ffcc00','#ff0066']})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"gauge-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Ping\"}),/*#__PURE__*/_jsx(GaugeChart,{id:\"ping-gauge\",nrOfLevels:30,percent:(ping||0)/500,text:`${ping!==null&&ping!==void 0?ping:'--'} ms`,animate:true,needleColor:\"#fff\",colors:['#cccccc','#ff3333']})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Speed Test History\"}),historyData.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No historical data.\"}):/*#__PURE__*/_jsx(Line,{data:{labels:historyData.map(entry=>new Date(entry.timestamp).toLocaleTimeString()),datasets:[{label:'Download (Mbps)',data:historyData.map(entry=>entry.download_mbps),borderColor:'#00ff99',tension:0.3},{label:'Upload (Mbps)',data:historyData.map(entry=>entry.upload_mbps),borderColor:'#ffcc00',tension:0.3},{label:'Ping (ms)',data:historyData.map(entry=>entry.ping_ms),borderColor:'#ff3333',tension:0.3}]},options:{responsive:true,plugins:{legend:{labels:{color:'#fff'}}},scales:{x:{ticks:{color:'#ccc'}},y:{ticks:{color:'#ccc'}}}}})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"scan-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"scan-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Scan Results\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowScanResults(!showScanResults),children:showScanResults?'Hide':'Show'})]}),isScanning&&/*#__PURE__*/_jsx(\"p\",{children:\"Scanning network...\"}),showScanResults&&!isScanning&&/*#__PURE__*/_jsx(\"div\",{className:\"scan-results\",children:scanResults.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No results yet.\"}):scanResults.map((host,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"scan-entry\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"scan-entry\",children:[/*#__PURE__*/_jsx(\"strong\",{children:host.ip}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Open Ports: \",host.open_ports.join(', ')]})]},index),/*#__PURE__*/_jsx(\"div\",{className:\"scan-host-count\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Hosts Scanned: \",hostCount]})})]},index))})]})]})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","GaugeChart","logo","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","App","gateway","setGateway","downloadSpeed","setDownloadSpeed","uploadSpeed","setUploadSpeed","ping","setPing","scanResults","setScanResults","isScanning","setIsScanning","showScanResults","setShowScanResults","hostCount","setHostCount","historyData","setHistoryData","fetch","then","res","json","data","Array","isArray","catch","err","console","error","gateway_ip","runSpeedtest","interval","setInterval","clearInterval","download_mbps","upload_mbps","ping_ms","runScan","results","host_count","className","children","src","alt","onClick","id","nrOfLevels","percent","text","animate","needleColor","colors","length","labels","map","entry","Date","timestamp","toLocaleTimeString","datasets","label","borderColor","tension","options","responsive","plugins","legend","color","scales","x","ticks","y","host","index","ip","open_ports","join"],"sources":["C:/Users/kenne/Downloads/NetWatchdog/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport GaugeChart from 'react-gauge-chart';\nimport logo from './assets/logo.png'; // Assuming you have a logo image in the src folder\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  LineElement,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend);\n\nfunction App() {\n  const [gateway, setGateway] = useState('');\n  const [downloadSpeed, setDownloadSpeed] = useState(null);\n  const [uploadSpeed, setUploadSpeed] = useState(null);\n  const [ping, setPing] = useState(null);\n  const [scanResults, setScanResults] = useState([]);\n  const [isScanning, setIsScanning] = useState(false);\n  const [showScanResults, setShowScanResults] = useState(true);\n  const [hostCount, setHostCount] = useState(0);\n  const [historyData, setHistoryData] = useState([]);\n\n  useEffect(() => {\n    fetch('/speedtest/history')\n      .then((res) => res.json())\n      .then((data) => {\n        if (Array.isArray(data)) {\n          setHistoryData(data);\n        }\n      })\n      .catch((err) => console.error('Failed to load history:', err));\n  }, []);\n\n  useEffect(() => {\n    fetch('/gateway')\n      .then((res) => res.json())\n      .then((data) => setGateway(data.gateway_ip || 'Unknown'))\n      .catch(() => setGateway('Error'));\n  }, []);\n\n  useEffect(() => {\n    runSpeedtest(); // initial run\n    const interval = setInterval(runSpeedtest, 120_000); // run every 2 minutes\n    return () => clearInterval(interval); // cleanup\n  }, []);\n\n  const runSpeedtest = async () => {\n    const res = await fetch('/speedtest');\n    const data = await res.json();\n    if (!data.error) {\n      setDownloadSpeed(data.download_mbps);\n      setUploadSpeed(data.upload_mbps);\n      setPing(data.ping_ms);\n    }\n  };\n\n  const runScan = async () => {\n    setIsScanning(true);\n    try {\n      const res = await fetch('/scan');\n      const data = await res.json();\n\n      if (Array.isArray(data.results)) {\n        setScanResults(data.results);\n        setHostCount(data.host_count);\n      } else {\n        console.error('Invalid scan results format:', data);\n        setScanResults([]);\n      }\n    } catch (error) {\n      console.error('Scan failed:', error);\n      setScanResults([]);\n    }\n    setIsScanning(false);\n  };\n\n  return (\n    <div className='App'>\n      <header className='header'>\n        <img src={logo} alt='NetWatchdog Logo' className='logo' />\n        <h1>NetWatchdog</h1>\n        <p>Default Gateway: {gateway}</p>\n        <div className='button-group'>\n          <button onClick={runSpeedtest}>Run Speedtest</button>\n          <button onClick={runScan}>Scan Network</button>\n        </div>\n      </header>\n\n      <main>\n        <div className='gauges'>\n          <div className='gauge-container'>\n            <h3>Download</h3>\n            <GaugeChart\n              id='download-gauge'\n              nrOfLevels={30}\n              percent={(downloadSpeed || 0) / 1000}\n              text={`${downloadSpeed ?? '--'} Mbps`}\n              animate\n              needleColor='#fff'\n              colors={['#00ff99', '#0099ff']}\n            />\n          </div>\n          <div className='gauge-container'>\n            <h3>Upload</h3>\n            <GaugeChart\n              id='upload-gauge'\n              nrOfLevels={30}\n              percent={(uploadSpeed || 0) / 100}\n              text={`${uploadSpeed ?? '--'} Mbps`}\n              animate\n              needleColor='#fff'\n              colors={['#ffcc00', '#ff0066']}\n            />\n          </div>\n          <div className='gauge-container'>\n            <h3>Ping</h3>\n            <GaugeChart\n              id='ping-gauge'\n              nrOfLevels={30}\n              percent={(ping || 0) / 500}\n              text={`${ping ?? '--'} ms`}\n              animate\n              needleColor='#fff'\n              colors={['#cccccc', '#ff3333']}\n            />\n          </div>\n          <div className='chart-section'>\n            <h2>Speed Test History</h2>\n            {historyData.length === 0 ? (\n              <p>No historical data.</p>\n            ) : (\n              <Line\n                data={{\n                  labels: historyData.map((entry) =>\n                    new Date(entry.timestamp).toLocaleTimeString(),\n                  ),\n                  datasets: [\n                    {\n                      label: 'Download (Mbps)',\n                      data: historyData.map((entry) => entry.download_mbps),\n                      borderColor: '#00ff99',\n                      tension: 0.3,\n                    },\n                    {\n                      label: 'Upload (Mbps)',\n                      data: historyData.map((entry) => entry.upload_mbps),\n                      borderColor: '#ffcc00',\n                      tension: 0.3,\n                    },\n                    {\n                      label: 'Ping (ms)',\n                      data: historyData.map((entry) => entry.ping_ms),\n                      borderColor: '#ff3333',\n                      tension: 0.3,\n                    },\n                  ],\n                }}\n                options={{\n                  responsive: true,\n                  plugins: {\n                    legend: {\n                      labels: {\n                        color: '#fff',\n                      },\n                    },\n                  },\n                  scales: {\n                    x: {\n                      ticks: { color: '#ccc' },\n                    },\n                    y: {\n                      ticks: { color: '#ccc' },\n                    },\n                  },\n                }}\n              />\n            )}\n          </div>\n        </div>\n\n        <div className='scan-section'>\n          <div className='scan-header'>\n            <h2>Scan Results</h2>\n            <button onClick={() => setShowScanResults(!showScanResults)}>\n              {showScanResults ? 'Hide' : 'Show'}\n            </button>\n          </div>\n          {isScanning && <p>Scanning network...</p>}\n          {showScanResults && !isScanning && (\n            <div className='scan-results'>\n              {scanResults.length === 0 ? (\n                <p>No results yet.</p>\n              ) : (\n                scanResults.map((host, index) => (\n                  <div className='scan-entry' key={index}>\n                    <div key={index} className='scan-entry'>\n                      <strong>{host.ip}</strong>\n                      <span>Open Ports: {host.open_ports.join(', ')}</span>\n                    </div>\n                    <div className='scan-host-count'>\n                      <p>Hosts Scanned: {hostCount}</p>\n                    </div>\n                  </div>\n                ))\n              )}\n            </div>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}