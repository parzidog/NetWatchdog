{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenne\\\\Downloads\\\\NetWatchdog\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport GaugeChart from 'react-gauge-chart';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [gateway, setGateway] = useState('');\n  const [downloadSpeed, setDownloadSpeed] = useState(null);\n  const [uploadSpeed, setUploadSpeed] = useState(null);\n  const [ping, setPing] = useState(null);\n  const [scanResults, setScanResults] = useState([]);\n  const [isScanning, setIsScanning] = useState(false);\n  const [showScanResults, setShowScanResults] = useState(true);\n  const [hostCount, setHostCount] = useState(0);\n  const [historyData, setHistoryData] = useState([]);\n  useEffect(() => {\n    fetch('/speedtest/history').then(res => res.json()).then(data => {\n      if (Array.isArray(data)) {\n        setHistoryData(data);\n      }\n    }).catch(err => console.error('Failed to load history:', err));\n  }, []);\n  useEffect(() => {\n    fetch('/gateway').then(res => res.json()).then(data => setGateway(data.gateway_ip || 'Unknown')).catch(() => setGateway('Error'));\n  }, []);\n  useEffect(() => {\n    runSpeedtest();\n    const interval = setInterval(runSpeedtest, 120000);\n    return () => clearInterval(interval);\n  }, []);\n  const runSpeedtest = async () => {\n    const res = await fetch('/speedtest');\n    const data = await res.json();\n    if (!data.error) {\n      setDownloadSpeed(data.download_mbps);\n      setUploadSpeed(data.upload_mbps);\n      setPing(data.ping_ms);\n    }\n  };\n  const runScan = async () => {\n    setIsScanning(true);\n    try {\n      const res = await fetch('/scan');\n      const data = await res.json();\n      if (Array.isArray(data.results)) {\n        setScanResults(data.results);\n        setHostCount(data.host_count);\n      } else {\n        console.error('Invalid scan results format:', data);\n        setScanResults([]);\n      }\n    } catch (error) {\n      console.error('Scan failed:', error);\n      setScanResults([]);\n    }\n    setIsScanning(false);\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        labels: {\n          color: '#fff'\n        }\n      }\n    },\n    scales: {\n      x: {\n        ticks: {\n          color: '#ccc'\n        }\n      },\n      y: {\n        ticks: {\n          color: '#ccc'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/logo.svg\",\n        alt: \"NetWatchdog Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Default Gateway: \", gateway]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: runSpeedtest,\n          children: \"Run Speedtest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: runScan,\n          children: \"Scan Network\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gauges\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gauge-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GaugeChart, {\n            id: \"download-gauge\",\n            nrOfLevels: 30,\n            percent: (downloadSpeed || 0) / 1000,\n            text: `${downloadSpeed !== null && downloadSpeed !== void 0 ? downloadSpeed : '--'} Mbps`,\n            animate: true,\n            needleColor: \"#fff\",\n            colors: ['#00ff99', '#0099ff']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gauge-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GaugeChart, {\n            id: \"upload-gauge\",\n            nrOfLevels: 30,\n            percent: (uploadSpeed || 0) / 100,\n            text: `${uploadSpeed !== null && uploadSpeed !== void 0 ? uploadSpeed : '--'} Mbps`,\n            animate: true,\n            needleColor: \"#fff\",\n            colors: ['#ffcc00', '#ff0066']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gauge-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Ping\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GaugeChart, {\n            id: \"ping-gauge\",\n            nrOfLevels: 30,\n            percent: (ping || 0) / 500,\n            text: `${ping !== null && ping !== void 0 ? ping : '--'} ms`,\n            animate: true,\n            needleColor: \"#fff\",\n            colors: ['#cccccc', '#ff3333']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Download History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: {\n              labels: historyData.map(entry => new Date(entry.timestamp).toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })),\n              datasets: [{\n                label: 'Download (Mbps)',\n                data: historyData.map(entry => entry.download_mbps),\n                borderColor: '#00ff99',\n                tension: 0.3\n              }]\n            },\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Upload History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: {\n              labels: historyData.map(entry => new Date(entry.timestamp).toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })),\n              datasets: [{\n                label: 'Upload (Mbps)',\n                data: historyData.map(entry => entry.upload_mbps),\n                borderColor: '#ffcc00',\n                tension: 0.3\n              }]\n            },\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Ping History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: {\n              labels: historyData.map(entry => new Date(entry.timestamp).toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })),\n              datasets: [{\n                label: 'Ping (ms)',\n                data: historyData.map(entry => entry.ping_ms),\n                borderColor: '#ff3333',\n                tension: 0.3\n              }]\n            },\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scan-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scan-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Scan Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowScanResults(!showScanResults),\n            children: showScanResults ? 'Hide' : 'Show'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), isScanning && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Scanning network...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 26\n        }, this), showScanResults && !isScanning && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scan-results\",\n          children: [scanResults.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No results yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this) : scanResults.map((host, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scan-entry\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scan-ip\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: host.ip\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scan-ports\",\n              children: [\"Ports: \", host.open_ports.join(', ') || 'None']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scan-host-count\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Hosts Scanned: \", hostCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4EBfRBJJ44VO+0nfdhhhpBRWiII=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","GaugeChart","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","App","_s","gateway","setGateway","downloadSpeed","setDownloadSpeed","uploadSpeed","setUploadSpeed","ping","setPing","scanResults","setScanResults","isScanning","setIsScanning","showScanResults","setShowScanResults","hostCount","setHostCount","historyData","setHistoryData","fetch","then","res","json","data","Array","isArray","catch","err","console","error","gateway_ip","runSpeedtest","interval","setInterval","clearInterval","download_mbps","upload_mbps","ping_ms","runScan","results","host_count","chartOptions","responsive","plugins","legend","labels","color","scales","x","ticks","y","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","nrOfLevels","percent","text","animate","needleColor","colors","map","entry","Date","timestamp","toLocaleTimeString","hour","minute","datasets","label","borderColor","tension","options","length","host","index","ip","open_ports","join","_c","$RefreshReg$"],"sources":["C:/Users/kenne/Downloads/NetWatchdog/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport GaugeChart from 'react-gauge-chart';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  LineElement,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend);\n\nfunction App() {\n  const [gateway, setGateway] = useState('');\n  const [downloadSpeed, setDownloadSpeed] = useState(null);\n  const [uploadSpeed, setUploadSpeed] = useState(null);\n  const [ping, setPing] = useState(null);\n  const [scanResults, setScanResults] = useState([]);\n  const [isScanning, setIsScanning] = useState(false);\n  const [showScanResults, setShowScanResults] = useState(true);\n  const [hostCount, setHostCount] = useState(0);\n  const [historyData, setHistoryData] = useState([]);\n\n  useEffect(() => {\n    fetch('/speedtest/history')\n      .then((res) => res.json())\n      .then((data) => {\n        if (Array.isArray(data)) {\n          setHistoryData(data);\n        }\n      })\n      .catch((err) => console.error('Failed to load history:', err));\n  }, []);\n\n  useEffect(() => {\n    fetch('/gateway')\n      .then((res) => res.json())\n      .then((data) => setGateway(data.gateway_ip || 'Unknown'))\n      .catch(() => setGateway('Error'));\n  }, []);\n\n  useEffect(() => {\n    runSpeedtest();\n    const interval = setInterval(runSpeedtest, 120_000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const runSpeedtest = async () => {\n    const res = await fetch('/speedtest');\n    const data = await res.json();\n    if (!data.error) {\n      setDownloadSpeed(data.download_mbps);\n      setUploadSpeed(data.upload_mbps);\n      setPing(data.ping_ms);\n    }\n  };\n\n  const runScan = async () => {\n    setIsScanning(true);\n    try {\n      const res = await fetch('/scan');\n      const data = await res.json();\n\n      if (Array.isArray(data.results)) {\n        setScanResults(data.results);\n        setHostCount(data.host_count);\n      } else {\n        console.error('Invalid scan results format:', data);\n        setScanResults([]);\n      }\n    } catch (error) {\n      console.error('Scan failed:', error);\n      setScanResults([]);\n    }\n    setIsScanning(false);\n  };\n\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        labels: {\n          color: '#fff',\n        },\n      },\n    },\n    scales: {\n      x: { ticks: { color: '#ccc' } },\n      y: { ticks: { color: '#ccc' } },\n    },\n  };\n\n  return (\n    <div className='App'>\n      <header className='header'>\n        <img src='/logo.svg' alt='NetWatchdog Logo' className='logo' />\n        <p>Default Gateway: {gateway}</p>\n        <div className='button-group'>\n          <button onClick={runSpeedtest}>Run Speedtest</button>\n          <button onClick={runScan}>Scan Network</button>\n        </div>\n      </header>\n\n      <main>\n        <div className='gauges'>\n          <div className='gauge-container'>\n            <h3>Download</h3>\n            <GaugeChart\n              id='download-gauge'\n              nrOfLevels={30}\n              percent={(downloadSpeed || 0) / 1000}\n              text={`${downloadSpeed ?? '--'} Mbps`}\n              animate\n              needleColor='#fff'\n              colors={['#00ff99', '#0099ff']}\n            />\n          </div>\n          <div className='gauge-container'>\n            <h3>Upload</h3>\n            <GaugeChart\n              id='upload-gauge'\n              nrOfLevels={30}\n              percent={(uploadSpeed || 0) / 100}\n              text={`${uploadSpeed ?? '--'} Mbps`}\n              animate\n              needleColor='#fff'\n              colors={['#ffcc00', '#ff0066']}\n            />\n          </div>\n          <div className='gauge-container'>\n            <h3>Ping</h3>\n            <GaugeChart\n              id='ping-gauge'\n              nrOfLevels={30}\n              percent={(ping || 0) / 500}\n              text={`${ping ?? '--'} ms`}\n              animate\n              needleColor='#fff'\n              colors={['#cccccc', '#ff3333']}\n            />\n          </div>\n        </div>\n\n        <div className='charts-wrapper'>\n          <div className='chart-container'>\n            <h3>Download History</h3>\n            <Line\n              data={{\n                labels: historyData.map((entry) =>\n                  new Date(entry.timestamp).toLocaleTimeString([], {\n                    hour: '2-digit',\n                    minute: '2-digit',\n                  }),\n                ),\n                datasets: [\n                  {\n                    label: 'Download (Mbps)',\n                    data: historyData.map((entry) => entry.download_mbps),\n                    borderColor: '#00ff99',\n                    tension: 0.3,\n                  },\n                ],\n              }}\n              options={chartOptions}\n            />\n          </div>\n\n          <div className='chart-container'>\n            <h3>Upload History</h3>\n            <Line\n              data={{\n                labels: historyData.map((entry) =>\n                  new Date(entry.timestamp).toLocaleTimeString([], {\n                    hour: '2-digit',\n                    minute: '2-digit',\n                  }),\n                ),\n                datasets: [\n                  {\n                    label: 'Upload (Mbps)',\n                    data: historyData.map((entry) => entry.upload_mbps),\n                    borderColor: '#ffcc00',\n                    tension: 0.3,\n                  },\n                ],\n              }}\n              options={chartOptions}\n            />\n          </div>\n\n          <div className='chart-container'>\n            <h3>Ping History</h3>\n            <Line\n              data={{\n                labels: historyData.map((entry) =>\n                  new Date(entry.timestamp).toLocaleTimeString([], {\n                    hour: '2-digit',\n                    minute: '2-digit',\n                  }),\n                ),\n                datasets: [\n                  {\n                    label: 'Ping (ms)',\n                    data: historyData.map((entry) => entry.ping_ms),\n                    borderColor: '#ff3333',\n                    tension: 0.3,\n                  },\n                ],\n              }}\n              options={chartOptions}\n            />\n          </div>\n        </div>\n\n        <div className='scan-section'>\n          <div className='scan-header'>\n            <h2>Scan Results</h2>\n            <button onClick={() => setShowScanResults(!showScanResults)}>\n              {showScanResults ? 'Hide' : 'Show'}\n            </button>\n          </div>\n          {isScanning && <p>Scanning network...</p>}\n          {showScanResults && !isScanning && (\n            <div className='scan-results'>\n              {scanResults.length === 0 ? (\n                <p>No results yet.</p>\n              ) : (\n                scanResults.map((host, index) => (\n                  <div className='scan-entry' key={index}>\n                    <div className='scan-ip'>\n                      <strong>{host.ip}</strong>\n                    </div>\n                    <div className='scan-ports'>Ports: {host.open_ports.join(', ') || 'None'}</div>\n                  </div>\n                ))\n              )}\n              <div className='scan-host-count'>\n                <p>Hosts Scanned: {hostCount}</p>\n              </div>\n            </div>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}