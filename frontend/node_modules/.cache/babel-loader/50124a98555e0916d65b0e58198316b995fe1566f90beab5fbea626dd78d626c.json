{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[scanData,setScanData]=useState(null);const[speedData,setSpeedData]=useState(null);const[gatewayData,setGatewayData]=useState(null);const[errors,setErrors]=useState([]);useEffect(()=>{fetch(\"/scan\").then(res=>res.json()).then(data=>setScanData(data)).catch(err=>{console.error(\"Scan error:\",err);setErrors(prev=>[...prev,\"Scan\"]);});fetch(\"/speedtest\").then(res=>res.json()).then(data=>setSpeedData(data)).catch(err=>{console.error(\"Speedtest error:\",err);setErrors(prev=>[...prev,\"Speedtest\"]);});fetch(\"/gateway\").then(res=>res.json()).then(data=>setGatewayData(data)).catch(err=>{console.error(\"Gateway error:\",err);setErrors(prev=>[...prev,\"Gateway\"]);});},[]);return/*#__PURE__*/_jsxs(\"div\",{style:{background:\"#121212\",color:\"#fff\",fontFamily:\"sans-serif\",padding:\"2rem\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"NetWatchdog Dashboard\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Network Scan\"}),scanData===null?errors.includes(\"Scan\")?/*#__PURE__*/_jsx(\"p\",{children:\"Error loading scan data\"}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}):scanData.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No open ports or devices found.\"}):/*#__PURE__*/_jsx(\"ul\",{children:scanData.map((entry,i)=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:entry.ip}),\": Ports \\u2192 \",entry.open_ports.join(\", \")]},i))}),/*#__PURE__*/_jsx(\"h2\",{children:\"Speed Test\"}),speedData===null?errors.includes(\"Speedtest\")?/*#__PURE__*/_jsx(\"p\",{children:\"Error loading speed test\"}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}):/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"Download: \",speedData.download_mbps,\" Mbps\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Upload: \",speedData.upload_mbps,\" Mbps\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Ping: \",speedData.ping_ms,\" ms\"]})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Gateway Info\"}),gatewayData===null?errors.includes(\"Gateway\")?/*#__PURE__*/_jsx(\"p\",{children:\"Error loading gateway info\"}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}):/*#__PURE__*/_jsx(\"pre\",{children:JSON.stringify(gatewayData,null,2)})]});};export default App;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","App","scanData","setScanData","speedData","setSpeedData","gatewayData","setGatewayData","errors","setErrors","fetch","then","res","json","data","catch","err","console","error","prev","style","background","color","fontFamily","padding","children","includes","length","map","entry","i","ip","open_ports","join","download_mbps","upload_mbps","ping_ms","JSON","stringify"],"sources":["C:/Users/kenne/Downloads/NetWatchdog/frontend/src/App.js"],"sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\n\nconst App = () => {\n  const [scanData, setScanData] = useState(null);\n  const [speedData, setSpeedData] = useState(null);\n  const [gatewayData, setGatewayData] = useState(null);\n  const [errors, setErrors] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/scan\")\n      .then(res => res.json())\n      .then(data => setScanData(data))\n      .catch(err => {\n        console.error(\"Scan error:\", err);\n        setErrors(prev => [...prev, \"Scan\"]);\n      });\n\n    fetch(\"/speedtest\")\n      .then(res => res.json())\n      .then(data => setSpeedData(data))\n      .catch(err => {\n        console.error(\"Speedtest error:\", err);\n        setErrors(prev => [...prev, \"Speedtest\"]);\n      });\n\n    fetch(\"/gateway\")\n      .then(res => res.json())\n      .then(data => setGatewayData(data))\n      .catch(err => {\n        console.error(\"Gateway error:\", err);\n        setErrors(prev => [...prev, \"Gateway\"]);\n      });\n  }, []);\n\n  return (\n    <div style={{ background: \"#121212\", color: \"#fff\", fontFamily: \"sans-serif\", padding: \"2rem\" }}>\n      <h1>NetWatchdog Dashboard</h1>\n\n      <h2>Network Scan</h2>\n      {scanData === null ? (\n        errors.includes(\"Scan\") ? <p>Error loading scan data</p> : <p>Loading...</p>\n      ) : scanData.length === 0 ? (\n        <p>No open ports or devices found.</p>\n      ) : (\n        <ul>\n          {scanData.map((entry, i) => (\n            <li key={i}>\n              <strong>{entry.ip}</strong>: Ports â†’ {entry.open_ports.join(\", \")}\n            </li>\n          ))}\n        </ul>\n      )}\n\n      <h2>Speed Test</h2>\n      {speedData === null ? (\n        errors.includes(\"Speedtest\") ? <p>Error loading speed test</p> : <p>Loading...</p>\n      ) : (\n        <ul>\n          <li>Download: {speedData.download_mbps} Mbps</li>\n          <li>Upload: {speedData.upload_mbps} Mbps</li>\n          <li>Ping: {speedData.ping_ms} ms</li>\n        </ul>\n      )}\n\n      <h2>Gateway Info</h2>\n      {gatewayData === null ? (\n        errors.includes(\"Gateway\") ? <p>Error loading gateway info</p> : <p>Loading...</p>\n      ) : (\n        <pre>{JSON.stringify(gatewayData, null, 2)}</pre>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAACQ,SAAS,CAAEC,YAAY,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACU,WAAW,CAAEC,cAAc,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAACY,MAAM,CAAEC,SAAS,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAExCD,SAAS,CAAC,IAAM,CACde,KAAK,CAAC,OAAO,CAAC,CACXC,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,EAAIX,WAAW,CAACW,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAACC,GAAG,EAAI,CACZC,OAAO,CAACC,KAAK,CAAC,aAAa,CAAEF,GAAG,CAAC,CACjCP,SAAS,CAACU,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAE,MAAM,CAAC,CAAC,CACtC,CAAC,CAAC,CAEJT,KAAK,CAAC,YAAY,CAAC,CAChBC,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,EAAIT,YAAY,CAACS,IAAI,CAAC,CAAC,CAChCC,KAAK,CAACC,GAAG,EAAI,CACZC,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAEF,GAAG,CAAC,CACtCP,SAAS,CAACU,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAE,WAAW,CAAC,CAAC,CAC3C,CAAC,CAAC,CAEJT,KAAK,CAAC,UAAU,CAAC,CACdC,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,EAAIP,cAAc,CAACO,IAAI,CAAC,CAAC,CAClCC,KAAK,CAACC,GAAG,EAAI,CACZC,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAEF,GAAG,CAAC,CACpCP,SAAS,CAACU,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAE,SAAS,CAAC,CAAC,CACzC,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEnB,KAAA,QAAKoB,KAAK,CAAE,CAAEC,UAAU,CAAE,SAAS,CAAEC,KAAK,CAAE,MAAM,CAAEC,UAAU,CAAE,YAAY,CAAEC,OAAO,CAAE,MAAO,CAAE,CAAAC,QAAA,eAC9F3B,IAAA,OAAA2B,QAAA,CAAI,uBAAqB,CAAI,CAAC,cAE9B3B,IAAA,OAAA2B,QAAA,CAAI,cAAY,CAAI,CAAC,CACpBvB,QAAQ,GAAK,IAAI,CAChBM,MAAM,CAACkB,QAAQ,CAAC,MAAM,CAAC,cAAG5B,IAAA,MAAA2B,QAAA,CAAG,yBAAuB,CAAG,CAAC,cAAG3B,IAAA,MAAA2B,QAAA,CAAG,YAAU,CAAG,CAAC,CAC1EvB,QAAQ,CAACyB,MAAM,GAAK,CAAC,cACvB7B,IAAA,MAAA2B,QAAA,CAAG,iCAA+B,CAAG,CAAC,cAEtC3B,IAAA,OAAA2B,QAAA,CACGvB,QAAQ,CAAC0B,GAAG,CAAC,CAACC,KAAK,CAAEC,CAAC,gBACrB9B,KAAA,OAAAyB,QAAA,eACE3B,IAAA,WAAA2B,QAAA,CAASI,KAAK,CAACE,EAAE,CAAS,CAAC,kBAAU,CAACF,KAAK,CAACG,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC,GAD1DH,CAEL,CACL,CAAC,CACA,CACL,cAEDhC,IAAA,OAAA2B,QAAA,CAAI,YAAU,CAAI,CAAC,CAClBrB,SAAS,GAAK,IAAI,CACjBI,MAAM,CAACkB,QAAQ,CAAC,WAAW,CAAC,cAAG5B,IAAA,MAAA2B,QAAA,CAAG,0BAAwB,CAAG,CAAC,cAAG3B,IAAA,MAAA2B,QAAA,CAAG,YAAU,CAAG,CAAC,cAElFzB,KAAA,OAAAyB,QAAA,eACEzB,KAAA,OAAAyB,QAAA,EAAI,YAAU,CAACrB,SAAS,CAAC8B,aAAa,CAAC,OAAK,EAAI,CAAC,cACjDlC,KAAA,OAAAyB,QAAA,EAAI,UAAQ,CAACrB,SAAS,CAAC+B,WAAW,CAAC,OAAK,EAAI,CAAC,cAC7CnC,KAAA,OAAAyB,QAAA,EAAI,QAAM,CAACrB,SAAS,CAACgC,OAAO,CAAC,KAAG,EAAI,CAAC,EACnC,CACL,cAEDtC,IAAA,OAAA2B,QAAA,CAAI,cAAY,CAAI,CAAC,CACpBnB,WAAW,GAAK,IAAI,CACnBE,MAAM,CAACkB,QAAQ,CAAC,SAAS,CAAC,cAAG5B,IAAA,MAAA2B,QAAA,CAAG,4BAA0B,CAAG,CAAC,cAAG3B,IAAA,MAAA2B,QAAA,CAAG,YAAU,CAAG,CAAC,cAElF3B,IAAA,QAAA2B,QAAA,CAAMY,IAAI,CAACC,SAAS,CAAChC,WAAW,CAAE,IAAI,CAAE,CAAC,CAAC,CAAM,CACjD,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAL,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}